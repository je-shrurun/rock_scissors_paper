{"version":3,"file":"main.js","mappings":"mBAAO,SAASA,EAAWC,GACvBC,KAAKD,MAAQA,CACf,CCFK,SAASE,EAAKC,EAAKC,EAAMC,GAC9BJ,KAAKE,IAAMA,EACXF,KAAKG,KAAOA,EAGZH,KAAKK,KAAOC,SAASC,cAAc,UACnCP,KAAKK,KAAKG,YAAcL,EAMxB,IAAIM,EAAQT,KACZA,KAAKK,KAAKK,QAAU,WAClBN,EAAQK,EACV,CACF,CCDA,SAASE,EAAKC,GACZC,cAAcC,GAEVC,GAAkBH,EACpBI,MAAM,UACGD,GAAkBhB,EAAMkB,QAAQL,GACzCI,MAAM,SAENA,MAAM,SAGRE,EAAOC,gBAAgB,YACvBpB,EAAMqB,SAASC,SAAQ,SAAUT,GAC/BA,EAAKU,SAAQ,EACf,GACF,CF1BExB,EAAWyB,UAAUH,OAAS,WAC5B,OAAOpB,KAAKD,KACd,EAEAD,EAAWyB,UAAUN,QAAU,SAAUL,GACvC,IAAIY,EAAQxB,KAAKD,MAAM0B,QAAQb,GAG/B,OADWZ,KAAKD,MAAMyB,EAAQ,IACTxB,KAAKD,MAAM,EAClC,ECMFE,EAAKsB,UAAUG,OAAS,SAAUC,GAChCA,EAAQC,OAAO5B,KAAKK,KACtB,EAEAJ,EAAKsB,UAAUD,QAAU,SAAUO,GAC7BA,EACF7B,KAAKK,KAAKyB,aAAa,YAAY,GAEnC9B,KAAKK,KAAKc,gBAAgB,WAE9B,ECGA,IAAID,EAASZ,SAASyB,eAAe,SACjCC,EAAO1B,SAASyB,eAAe,OAC/BE,EAAY3B,SAASyB,eAAe,gBAEpChC,EAAQ,IAAID,EAAW,CACzB,IAAIG,EAAK,UAAW,KAAMU,GAC1B,IAAIV,EAAK,OAAQ,KAAMU,GACvB,IAAIV,EAAK,QAAS,IAAKU,KAGzBZ,EAAMqB,SAASC,SAAQ,SAAUT,GAC/BA,EAAKc,OAAOO,GACZrB,EAAKU,SAAQ,EACf,IACA,IACIR,EADAC,EAAiBhB,EAAMqB,SAAS,GAGpCF,EAAOR,QAAU,WACfQ,EAAOY,aAAa,YAAY,GAEhC/B,EAAMqB,SAASC,SAAQ,SAAUT,GAC/BA,EAAKU,SAAQ,EACf,IAKAR,EAAUoB,aAAY,WACpBnB,EAAiBhB,EAAMkB,QAAQF,GAC/BiB,EAAKxB,YAAcO,EAAeZ,IACpC,GAAG,IACL,C","sources":["webpack:///./src/circleData.js","webpack:///./src/item.js","webpack:///./src/index.js"],"sourcesContent":["export function CircleData(items) {\r\n    this.items = items;\r\n  }\r\n  \r\n  CircleData.prototype.getAll = function () {\r\n    return this.items;\r\n  };\r\n  \r\n  CircleData.prototype.getNext = function (item) {\r\n    var index = this.items.indexOf(item);\r\n    // index를 넘어가면 undefined가 나옴\r\n    var next = this.items[index + 1];\r\n    return next ? next : this.items[0];\r\n  };\r\n  ","export function Item(key, name, onClick) {\r\n  this.key = key;\r\n  this.name = name;\r\n\r\n  // 버튼 만들기\r\n  this.$btn = document.createElement(\"button\");\r\n  this.$btn.textContent = name;\r\n\r\n  // 버튼 클릭 이벤트 핸들링\r\n  // onClick을 직접 할당하면, this가 달라짐\r\n  // this는 함수 호출자\r\n  // 그냥 this.key를 하면, 버튼이 호출한 것으로 되어 $btn이 됨\r\n  var _self = this;\r\n  this.$btn.onclick = function () {\r\n    onClick(_self);\r\n  };\r\n}\r\n\r\n// item.render()를 하면, render()를 호출한 item이 this가 됨\r\nItem.prototype.render = function ($parent) {\r\n  $parent.append(this.$btn);\r\n};\r\n\r\nItem.prototype.disable = function (value) {\r\n  if (value) {\r\n    this.$btn.setAttribute(\"disabled\", true);\r\n  } else {\r\n    this.$btn.removeAttribute(\"disabled\");\r\n  }\r\n};\r\n","// 파일을 14KB 미만으로 관리함.\r\n// TCP 및 이더넷 패킷 사이즈 때문\r\n// hand shake 등 단게가 있기 때문\r\n// 번들링으로 관리\r\n// 이카운트 3.0 프레임워크는 자체 ES5 번들러를 만들어서 사용중 => 그래서 ES6가 안되는 이유...\r\n\r\n// webpack 사용법\r\n// 중심이 되는 import하는 주체의 파일은 index로 설정해야 함\r\n// 병합할 파일들을 src 폴더에 넣음\r\n// npx webpack을 실행하면 dist 폴더에 생성됨 (npm i webpack webpack-cli 로 미리 설치해야 함)\r\n// 원래 webpack 설정을 해야하는데 최대한 기본 설정으로 실행함\r\n\r\nimport { CircleData } from \"./circleData.js\";\r\nimport { Item } from \"./item.js\";\r\n\r\nfunction game(item) {\r\n  clearInterval(timerId);\r\n\r\n  if (comCurrentItem == item) {\r\n    alert(\"비겼습니다.\");\r\n  } else if (comCurrentItem == items.getNext(item)) {\r\n    alert(\"졌습니다.\");\r\n  } else {\r\n    alert(\"이겼습니다\");\r\n  }\r\n\r\n  $start.removeAttribute(\"disabled\");\r\n  items.getAll().forEach(function (item) {\r\n    item.disable(true);\r\n  });\r\n}\r\n\r\nvar $start = document.getElementById(\"start\");\r\nvar $com = document.getElementById(\"com\");\r\nvar $itemBtns = document.getElementById(\"item-buttons\");\r\n\r\nvar items = new CircleData([\r\n  new Item(\"scissor\", \"가위\", game),\r\n  new Item(\"rock\", \"바위\", game),\r\n  new Item(\"paper\", \"보\", game),\r\n]);\r\n\r\nitems.getAll().forEach(function (item) {\r\n  item.render($itemBtns);\r\n  item.disable(true);\r\n});\r\nvar comCurrentItem = items.getAll()[0];\r\nvar timerId;\r\n\r\n$start.onclick = function () {\r\n  $start.setAttribute(\"disabled\", true);\r\n  // disbled는 아예 없애야 함\r\n  items.getAll().forEach(function (item) {\r\n    item.disable(false);\r\n  });\r\n\r\n  // 싱글스레드이기 때문에 콜스택이 끝난 후 렌더링이 이루어짐\r\n  // 함수를 종료하여 렌더링 할 수 있는 시간을 줘야 함\r\n  // => setInterval\r\n  timerId = setInterval(function () {\r\n    comCurrentItem = items.getNext(comCurrentItem);\r\n    $com.textContent = comCurrentItem.name;\r\n  }, 100); // ms\r\n};\r\n"],"names":["CircleData","items","this","Item","key","name","onClick","$btn","document","createElement","textContent","_self","onclick","game","item","clearInterval","timerId","comCurrentItem","alert","getNext","$start","removeAttribute","getAll","forEach","disable","prototype","index","indexOf","render","$parent","append","value","setAttribute","getElementById","$com","$itemBtns","setInterval"],"sourceRoot":""}